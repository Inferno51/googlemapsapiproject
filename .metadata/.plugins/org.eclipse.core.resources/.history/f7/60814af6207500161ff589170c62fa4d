package localhost.googlemaps.directions;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;

/**
 * 
 * Simple Google Directions API class
 * 
 * @author Jonathan Pack
 * @since 2016-09-06
 *
 */
public class EmployeeAPIRestRequest {
	
	//The URL of the API we want to connect to 
	protected static String endpoint = "http://localhost:1337/employee";
	
	
    // The character set to use when encoding URL parameters
	protected static String charset = "UTF-8";

	
	public static void main(String[] args) {

		try {
			
		    //The origin or starting point for directions
			String origin = "Heathrow Airport TW6, United Kingdom";
			
			//The destination or end point for directions
			String destination = "Willow Rd, Nottingham NG7 2WS, UK";
			
			String units = "metric";
			
			String avoid = "tolls";
			
			//The return type of the response xml or json
			String returnType = "json";
			

			//creates the URL parameters as a string, and encode them with the defined charset
			String queryString = String.format("origin=%s&destination=%s&u=%s&avoid=%skey=%s",
					URLEncoder.encode(origin, charset),
					URLEncoder.encode(destination, charset),
					URLEncoder.encode(units, charset),
					URLEncoder.encode(avoid, charset),
					URLEncoder.encode(key, charset)
			);

			//creates a new URL out of the endpoint, returnType and  queryString
			URL googleDirections = new URL(endpoint + returnType + "?" + queryString);
			HttpURLConnection connection = (HttpURLConnection) googleDirections.openConnection();
			connection.setRequestMethod("GET");

			//if we did not get a 200 (success) throw an exception, and print the exception
			if (connection.getResponseCode() != 200) {
				throw new RuntimeException("Failed : HTTP error code : " + connection.getResponseCode());
			}

			//read response into buffer
			BufferedReader br = new BufferedReader(new InputStreamReader((connection.getInputStream())));

			//loop of buffer line by line until it return null meaning there are no more lines
			while (br.readLine() != null) {
				//print out each line to the screen
				System.out.println(br.readLine());
			}

			//close connection to API
			connection.disconnect();

		} catch (MalformedURLException e) {

			e.printStackTrace();

		} catch (IOException e) {

			e.printStackTrace();

		}
		
	}

}